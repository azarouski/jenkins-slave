FROM alpine:3.11.3

LABEL maintainer "Ilya Varchenya <ivarchenya@solvd.com>"

ENV DEBIAN_FRONTEND=noninteractive

#=============
# Set WORKDIR
#=============
WORKDIR /root

#==================
# General Packages
#==================
RUN apk add --no-cache \
    bash \
    openjdk8 \
    ca-certificates \
    tzdata \
    unzip \
    curl \
    wget \
    qt5-qtbase-dev \
    xvfb-run \
    socat \
    git \
    openssh \
    bind-tools
RUN rm -rf /var/lib/apt/lists/*

#===============
# Install Docker
#===============
RUN apk add --no-cache docker openrc
RUN rc-update add docker boot

#===============
# Install Maven 3.6.3
#===============
ARG MAVEN_VERSION=3.6.3
RUN cd /opt && \
    wget https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.zip && \
    unzip apache-maven-${MAVEN_VERSION}-bin.zip && \
    rm apache-maven-${MAVEN_VERSION}-bin.zip && \
    mv apache-maven-${MAVEN_VERSION}/ maven/

#===============
# Set JAVA_HOME and M2_HOME
#===============
ENV JAVA_HOME="/usr/lib/jvm/java-1.8-openjdk/" \
    M2_HOME="/opt/maven" \
    MAVEN_HOME="/opt/maven"
ENV PATH=$PATH:$JAVA_HOME/bin:$M2_HOME/bin

#===============
# Clone and install carina dependenices
#===============
RUN cd /opt && \
    git clone --single-branch --branch master https://github.com/qaprosoft/carina && \
    cd carina && \
    mvn -U clean install

#===============
# Clone and install carina-demo dependenices
#===============
RUN cd /opt && \
    git clone --single-branch --branch master https://github.com/qaprosoft/carina-demo && \
    cd carina-demo && \
    mvn -U clean install

#======================
# Install Jenkins swarm
#======================
ENV JENKINS_SLAVE_ROOT="/opt/jenkins"

USER root

RUN mkdir -p "$JENKINS_SLAVE_ROOT"
RUN mkdir -p /opt/apk

# Slave settings
ENV JENKINS_MASTER_USERNAME="jenkins" \
    JENKINS_MASTER_PASSWORD="jenkins" \
    JENKINS_MASTER_URL="http://jenkins:8080/" \
    JENKINS_SLAVE_MODE="exclusive" \
    JENKINS_SLAVE_NAME="swarm-$RANDOM" \
    JENKINS_SLAVE_WORKERS="1" \
    JENKINS_SLAVE_LABELS="" \
    AVD=""

# Set the lang, you can also specify it as as environment variable through docker-compose.yml
ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8\
    LC_ALL=en_US.UTF-8

# Install Jenkins slave (swarm)
ADD swarm.jar /
ADD entrypoint.sh /

ENTRYPOINT ["/entrypoint.sh"]
